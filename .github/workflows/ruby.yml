name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Allows manual trigger

permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Lint with RuboCop
      run: bundle exec rubocop --parallel lib spec Rakefile *.gemspec

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '3.1', '3.2', '3.3', '3.4' ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    - name: Run tests
      run: bundle exec rspec --format documentation
      env:
        SIMPLECOV: 'true'
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage/coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: [ test, lint ]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true
    - name: Build gem
      run: bundle exec rake build
    - name: Upload gem artifact
      uses: actions/upload-artifact@v4
      with:
        name: ruby-gem
        path: pkg/*.gem
        retention-days: 7

  publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch full history to compare versions
    - name: Check if version changed
      id: version-check
      run: |
        # Check if version file was modified in this push
        if git diff --name-only HEAD~1 HEAD | grep -q "lib/satelliteapi/version.rb"; then
          # Get the version file from the previous commit
          PREV_VERSION=$(git show HEAD~1:lib/satelliteapi/version.rb | grep -oP "VERSION = '\K[^']+")
          # Get the current version
          CURR_VERSION=$(grep -oP "VERSION = '\K[^']+" lib/satelliteapi/version.rb)
          
          echo "Previous version: $PREV_VERSION"
          echo "Current version: $CURR_VERSION"
          
          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $CURR_VERSION"
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "new-version=$CURR_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version file modified but version unchanged: $CURR_VERSION"
            echo "version-changed=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "Version file not modified in this commit"
          echo "version-changed=false" >> $GITHUB_OUTPUT
        fi
    - name: Set up Ruby
      if: steps.version-check.outputs.version-changed == 'true'
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true
    - name: Publish to GitHub Packages
      if: steps.version-check.outputs.version-changed == 'true'
      run: |
        echo "Publishing version ${{ steps.version-check.outputs.new-version }} to GitHub Packages"
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem build *.gemspec
        gem push --KEY github --host https://rubygems.pkg.github.com/${OWNER} *.gem
      env:
        GEM_HOST_API_KEY: "Bearer ${{secrets.GITHUB_TOKEN}}"
        OWNER: ${{ github.repository_owner }}
